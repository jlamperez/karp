<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

  <xacro:macro name="karp" params="prefix">

  <!-- Constants for robot dimensions -->
  <xacro:property name="PI" value="3.1415926535897931"/>
  <xacro:property name="base_mass" value="5" /> <!-- arbitrary value for base mass -->
  <xacro:property name="base_width" value="0.36" />
  <xacro:property name="base_length" value="0.51" />
  <xacro:property name="base_height" value="0.20" />

  <xacro:property name="wheel_mass" value="2.2" />
  <xacro:property name="wheel_len" value="0.045" />
  <xacro:property name="wheel_radius" value="0.085" />

  <xacro:property name="caster_wheel_mass" value="2.1" />
  <xacro:property name="caster_wheel_radius" value="0.08" />
  <xacro:property name="z_offset" value="-${base_height/2}" /> <!-- Space btw top of beam and the each joint -->

  <!-- Base Link -->
  <link name="${prefix}base_link">
    <collision>
      <origin xyz="0 0 ${base_height/2}" rpy="0 0 ${PI/2}"/>
      <geometry>
        <box size="${base_width} ${base_length} ${base_height}"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 0" rpy="${PI/2}  0 ${PI/2}"/>
      <geometry>
        <mesh filename="package://karp_description/meshes/KARP_body.dae" />
      </geometry>
    </visual>

    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="${base_mass}"/>
      <inertia
        ixx="${base_mass / 12.0 * (base_length*base_length + base_height*base_height)}" ixy="0.0" ixz="0.0"
        iyy="${base_mass / 12.0 * (base_height*base_height + base_width*base_width)}" iyz="0.0"
        izz="${base_mass / 12.0 * (base_width*base_width + base_length*base_length)}"/>
      </inertial>
  </link>

  <!-- left wheel joint-->
  <joint name="${prefix}left_wheel_joint" type="continuous">
    <parent link="${prefix}base_link"/>
    <child link="${prefix}left_wheel"/>
    <origin xyz="0.165 -0.119 -0.11975" rpy="0 0 0"/>
    <axis xyz="0 1 0"/>
    <dynamics damping="0.2"/>
  </joint>

  <!-- left wheel Link -->
  <link name="${prefix}left_wheel">
    <collision>
      <origin xyz="0 ${wheel_len/2} 0" rpy="${PI/2} 0 0"/>
      <geometry>
        <cylinder length="${wheel_len}" radius="${wheel_radius}"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 0" rpy="0 0 -${PI/2}"/>
      <geometry>
        <mesh filename="package://karp_description/meshes/KARP_wheel.dae" />
      </geometry>
    </visual>

    <inertial>
      <origin xyz="0 0 1" rpy="0 0 0"/>
      <mass value="${wheel_mass}"/>
      <inertia
        ixx="${wheel_mass / 12.0 * (3*wheel_radius + wheel_len*wheel_len)}" ixy="0.0" ixz="0.0"
        iyy="${wheel_mass / 12.0 * wheel_radius*wheel_radius}" iyz="0.0"
        izz="${wheel_mass / 12.0 * wheel_radius*wheel_radius}"/>
    </inertial>
  </link>

  <!-- right wheel joint-->
  <joint name="${prefix}right_wheel_joint" type="continuous">
    <parent link="${prefix}base_link"/>
    <child link="${prefix}right_wheel"/>
    <origin xyz="0.165 0.119 -0.11975" rpy="0 0 0"/>
    <axis xyz="0 1 0"/>
    <dynamics damping="0.2"/>
  </joint>

  <!-- right wheel Link -->
  <link name="${prefix}right_wheel">
    <collision>
      <origin xyz="0 -${wheel_len/2} 0" rpy="${PI/2} 0 0"/>
      <geometry>
        <cylinder length="${wheel_len}" radius="${wheel_radius}"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 0" rpy="0 0 ${PI/2}"/>
      <geometry>
        <mesh filename="package://karp_description/meshes/KARP_wheel.dae" />
      </geometry>
    </visual>

    <inertial>
      <origin xyz="0 0 0" rpy="${PI/2} 0 0"/>
      <mass value="${wheel_mass}"/>
      <inertia
        ixx="${wheel_mass / 12.0 * (3*wheel_radius + wheel_len*wheel_len)}" ixy="0.0" ixz="0.0"
        iyy="${wheel_mass / 12.0 * wheel_radius*wheel_radius}" iyz="0.0"
        izz="${wheel_mass / 12.0 * wheel_radius*wheel_radius}"/>
    </inertial>
  </link>

  <!-- caster left wheel Link -->
  <joint name="${prefix}caster_left_wheel_joint" type="fixed">
    <parent link="${prefix}base_link"/>
    <child link="${prefix}caster_left_wheel"/>
    <origin xyz="-0.216 0.165 -0.028" rpy="0 0 0"/>
  </joint>

  <!-- caster left wheel Link -->
  <link name="${prefix}caster_left_wheel">
    <collision>
      <origin xyz="0.052 0 -0.1" rpy="0 0 0"/>
      <geometry>
        <sphere radius="${caster_wheel_radius}"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 0" rpy="${PI/2}  0 ${PI/2}"/>
      <geometry>
        <mesh filename="package://karp_description/meshes/KARP_caster_wheel.dae" />
      </geometry>
    </visual>

    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="${caster_wheel_mass}"/>
      <inertia
        ixx="${caster_wheel_mass * 0.4 * (caster_wheel_radius * caster_wheel_radius)}" ixy="0.0" ixz="0.0"
        iyy="${caster_wheel_mass * 0.4 * (caster_wheel_radius * caster_wheel_radius)}" iyz="0.0"
        izz="${caster_wheel_mass * 0.4 * (caster_wheel_radius * caster_wheel_radius)}"/>
    </inertial>
  </link>

  <!-- caster right wheel joint -->
  <joint name="${prefix}caster_right_wheel_joint" type="fixed">
    <parent link="${prefix}base_link"/>
    <child link="${prefix}caster_right_wheel"/>
    <origin xyz="-0.216 -0.165  -0.028" rpy="0 0 0"/>
  </joint>

  <!-- caster right wheel Link -->
  <link name="${prefix}caster_right_wheel">
    <collision>
      <origin xyz="0.052 0 -0.1" rpy="0 0 0"/>
      <geometry>
        <sphere radius="${caster_wheel_radius}"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 0" rpy="${PI/2}  0 ${PI/2}"/>
      <geometry>
        <mesh filename="package://karp_description/meshes/KARP_caster_wheel.dae" />
      </geometry>
    </visual>

    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="${caster_wheel_mass}"/>
      <inertia
        ixx="${caster_wheel_mass * 0.4 * (caster_wheel_radius * caster_wheel_radius)}" ixy="0.0" ixz="0.0"
        iyy="${caster_wheel_mass * 0.4 * (caster_wheel_radius * caster_wheel_radius)}" iyz="0.0"
        izz="${caster_wheel_mass * 0.4 * (caster_wheel_radius * caster_wheel_radius)}"/>
    </inertial>
  </link>

  </xacro:macro>

</robot>
